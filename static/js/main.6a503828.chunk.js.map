{"version":3,"sources":["components/Counter/Counter.module.css","components/Button/Button.module.css","components/Button/Button.tsx","components/ValueEditor/ValueEditor.tsx","components/CounterDisplay/CounterDisplay.tsx","components/Counter/Counter.tsx","VariantOne.tsx","VariantTwo.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/ValueEditor/ValueEditor.module.css"],"names":["module","exports","Button","React","memo","props","disabled","onClick","children","className","styles","button","ValueEditor","error","editMode","startValue","endCounter","setEditMode","setStartValue","setStartCounter","setEndCounter","setError","inputContainer","type","input","errorInput","value","onChange","event","currentTarget","buttonContainer","CounterDisplay","startCounter","limitReached","CounterStyle","color","fontWeight","fontSize","displayedContent","style","Counter","variant","onIncrementHandler","onResetHandler","displayContainer","VariantOne","VariantTwo","App","useState","useEffect","startValueLocal","localStorage","getItem","endCounterLocal","Number","setItem","toString","useCallback","prev","exact","to","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a503828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"Counter_displayContainer__24-Sf\",\"buttonContainer\":\"Counter_buttonContainer__2rz82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3-QGf\"};","import React, {FC} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype PropsType = {\r\n    disabled?: boolean\r\n    onClick: () => void\r\n}\r\n\r\nexport const Button: FC<PropsType> = React.memo((props) => {\r\n    const {disabled, onClick, children} = props;\r\n\r\n    return (\r\n        <button className={styles.button} onClick={onClick} disabled={disabled}>{children}</button>\r\n    )\r\n})","import React, {ChangeEvent, FC} from 'react';\r\nimport {Button} from '../Button/Button';\r\nimport styles from './ValueEditor.module.css'\r\n\r\ntype PropsType = {\r\n    startValue: number\r\n    endCounter: number\r\n    editMode: boolean\r\n    error: boolean\r\n    setEditMode: (value: boolean) => void\r\n    setStartValue: (value: number) => void\r\n    setStartCounter: (value: number) => void\r\n    setEndCounter: (value: number) => void\r\n    setError: (value: boolean) => void\r\n}\r\n\r\nexport const ValueEditor: FC<PropsType> = (props) => {\r\n    const {\r\n        error,\r\n        editMode,\r\n        startValue,\r\n        endCounter,\r\n        setEditMode,\r\n        setStartValue,\r\n        setStartCounter,\r\n        setEndCounter,\r\n        setError\r\n    } = props;\r\n\r\n    const onChangeStartValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const value = +event.currentTarget.value;\r\n        if (value >= endCounter || value < 0) return setError(true);\r\n        error && setError(false);\r\n        setEditMode(true);\r\n        setStartValue(value);\r\n    };\r\n    const onChangeMaxValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const value = +event.currentTarget.value;\r\n        if (value <= startValue) return setError(true);\r\n        error && setError(false);\r\n        setEditMode(true);\r\n        setEndCounter(value);\r\n    };\r\n    const onClickHandler = () => {\r\n        setStartCounter(startValue)\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n        <div className={styles.inputContainer}>\r\n            <div>Start value:\r\n                <input type=\"number\"\r\n                       className={`${styles.input} ${error ? styles.errorInput : ''}`}\r\n                       value={startValue}\r\n                       onChange={onChangeStartValue}/>\r\n            </div>\r\n            <div>Max value: <input type=\"number\"\r\n                                   className={`${styles.input} ${error ? styles.errorInput : ''}`}\r\n                                   value={endCounter}\r\n                                   onChange={onChangeMaxValue}/>\r\n            </div>\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n            <Button onClick={onClickHandler} disabled={!editMode || error}>set</Button>\r\n        </div>\r\n    </div>)\r\n}","import React, {FC} from 'react';\r\n\r\ntype PropsType = {\r\n    startCounter: number\r\n    limitReached: boolean\r\n    editMode: boolean\r\n    error: boolean\r\n}\r\n\r\nexport const CounterDisplay: FC<PropsType> = (props) => {\r\n    const {startCounter, limitReached, editMode, error} = props;\r\n\r\n    const CounterStyle = {\r\n        color: limitReached || error ? 'red' : '#282c34',\r\n        fontWeight: 700,\r\n        fontSize: limitReached ? '3.5rem' : '3rem',\r\n    }\r\n    const displayedContent = error ? 'Invalid value' : editMode? 'Set value' : startCounter\r\n\r\n    return (\r\n        <div style={CounterStyle}>{displayedContent}</div>\r\n    )\r\n}","import React, {FC} from 'react';\r\nimport {Button} from '../Button/Button';\r\nimport styles from './Counter.module.css'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay';\r\nimport {CounterVariantType} from '../../App';\r\n\r\ntype PropsType = {\r\n    startCounter: number\r\n    editMode: boolean\r\n    error: boolean\r\n    limitReached: boolean\r\n    startValue: number\r\n    variant: CounterVariantType\r\n    onIncrementHandler: () => void\r\n    onResetHandler: () => void\r\n    setEditMode: (value:boolean) => void\r\n}\r\n\r\nexport const Counter: FC<PropsType> = (props) => {\r\n    const {variant, startCounter, error, limitReached, editMode, startValue, onIncrementHandler, onResetHandler, setEditMode} = props;\r\n\r\n    return (<div>\r\n        <div className={styles.displayContainer}>\r\n            <CounterDisplay startCounter={startCounter}\r\n                            editMode={editMode}\r\n                            limitReached={limitReached}\r\n                            error={error}/>\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n            <Button disabled={limitReached || editMode}\r\n                    onClick={onIncrementHandler}>inc</Button>\r\n            <Button disabled={startCounter === startValue || editMode}\r\n                    onClick={onResetHandler}>reset</Button>\r\n            {variant === 'TWO' &&  <Button onClick={() => setEditMode(true)}>set</Button> }\r\n        </div>\r\n    </div>)\r\n}","import React, {FC} from 'react';\r\nimport {ValueEditor} from './components/ValueEditor/ValueEditor';\r\nimport {Counter} from './components/Counter/Counter';\r\nimport './App.css';\r\n\r\ntype PropsType = {\r\n    startValue: number\r\n    startCounter: number\r\n    error: boolean\r\n    editMode: boolean\r\n    endCounter: number\r\n    limitReached: boolean\r\n    onIncrementHandler: () => void\r\n    onResetHandler: () => void\r\n    setStartValue: (value: number) => void\r\n    setStartCounter: (value: number) => void\r\n    setEditMode: (value: boolean) => void\r\n    setError: (value: boolean) => void\r\n    setEndCounter: (value: number) => void\r\n}\r\n\r\nexport const VariantOne: FC<PropsType> = (props) => {\r\n    const {\r\n        startValue,\r\n        editMode,\r\n        error,\r\n        startCounter,\r\n        limitReached,\r\n        onResetHandler,\r\n        onIncrementHandler,\r\n        setStartValue,\r\n        setStartCounter,\r\n        setEditMode,\r\n        setError,\r\n        endCounter,\r\n        setEndCounter\r\n    } = props;\r\n    return (<div className=\"wrapper-counter\">\r\n        <div className=\"wrapper-block\">\r\n            <ValueEditor startValue={startValue}\r\n                         error={error}\r\n                         setStartValue={setStartValue}\r\n                         editMode={editMode}\r\n                         endCounter={endCounter}\r\n                         setStartCounter={setStartCounter}\r\n                         setEditMode={setEditMode}\r\n                         setEndCounter={setEndCounter}\r\n                         setError={setError}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"wrapper-block\">\r\n            <Counter startCounter={startCounter}\r\n                     editMode={editMode}\r\n                     error={error}\r\n                     limitReached={limitReached}\r\n                     startValue={startValue}\r\n                     onIncrementHandler={onIncrementHandler}\r\n                     onResetHandler={onResetHandler}\r\n                     variant={'ONE'}\r\n                     setEditMode={setEditMode}\r\n            />\r\n        </div>\r\n    </div>)\r\n}","import React, {FC} from 'react';\r\nimport {ValueEditor} from './components/ValueEditor/ValueEditor';\r\nimport {Counter} from './components/Counter/Counter';\r\nimport './App.css';\r\n\r\ntype PropsType = {\r\n    startValue: number\r\n    startCounter: number\r\n    error: boolean\r\n    editMode: boolean\r\n    endCounter: number\r\n    limitReached: boolean\r\n    onIncrementHandler: () => void\r\n    onResetHandler: () => void\r\n    setStartValue: (value: number) => void\r\n    setStartCounter: (value: number) => void\r\n    setEditMode: (value: boolean) => void\r\n    setError: (value: boolean) => void\r\n    setEndCounter: (value: number) => void\r\n}\r\n\r\nexport const VariantTwo: FC<PropsType> = (props) => {\r\n    const {\r\n        startValue,\r\n        editMode,\r\n        error,\r\n        startCounter,\r\n        limitReached,\r\n        onResetHandler,\r\n        onIncrementHandler,\r\n        setStartValue,\r\n        setStartCounter,\r\n        setEditMode,\r\n        setError,\r\n        endCounter,\r\n        setEndCounter\r\n    } = props;\r\n    return (<div className=\"wrapper-counter\">\r\n        <div className=\"wrapper-block\">\r\n            {editMode ? <ValueEditor startValue={startValue}\r\n                                     error={error}\r\n                                     setStartValue={setStartValue}\r\n                                     editMode={editMode}\r\n                                     endCounter={endCounter}\r\n                                     setStartCounter={setStartCounter}\r\n                                     setEditMode={setEditMode}\r\n                                     setEndCounter={setEndCounter}\r\n                                     setError={setError}\r\n            /> : <Counter startCounter={startCounter}\r\n                          editMode={editMode}\r\n                          error={error}\r\n                          limitReached={limitReached}\r\n                          startValue={startValue}\r\n                          onIncrementHandler={onIncrementHandler}\r\n                          onResetHandler={onResetHandler}\r\n                          variant={'TWO'}\r\n                          setEditMode={setEditMode}\r\n            />}\r\n        </div>\r\n    </div>)\r\n}","import React, {useCallback, useEffect, useState} from 'react';\nimport './App.css';\nimport {HashRouter, NavLink, Route} from 'react-router-dom';\nimport {VariantOne} from './VariantOne';\nimport {VariantTwo} from './VariantTwo';\n\nexport type CounterVariantType = 'ONE' | 'TWO';\n\nfunction App() {\n    const [startCounter, setStartCounter] = useState<number>(0);\n    const [endCounter, setEndCounter] = useState<number>(5);\n    const [startValue, setStartValue] = useState<number>(startCounter);\n\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [error, setError] = useState<boolean>(false);\n\n    const limitReached = startCounter === endCounter;\n\n    useEffect(() => {\n        const startValueLocal = localStorage.getItem('startValue');\n        const endCounterLocal = localStorage.getItem('endCounter');\n        if (startValueLocal && endCounterLocal) {\n            setStartCounter(Number(startValueLocal));\n            setStartValue(Number(startValueLocal));\n            setEndCounter(Number(endCounterLocal));\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem('startValue', startValue.toString());\n        localStorage.setItem('endCounter', endCounter.toString());\n    }, [endCounter, startValue])\n\n    const onIncrementHandler = useCallback(() => {\n        setStartCounter((prev) => prev + 1)\n    }, []);\n    const onResetHandler = useCallback(() => {\n        setStartCounter(startValue);\n    }, [startValue]);\n\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <div className={'menuNav'}>\n                    <NavLink exact to={'/'} className={`menuNav__link`}>Variant One</NavLink>\n                    <NavLink to={'/varianttwo'} className={`menuNav__link`}>Variant Two</NavLink>\n                </div>\n                <div className=\"App-header\">\n                    <Route exact path={'/'} render={() => <VariantOne\n                        setStartValue={setStartValue}\n                        editMode={editMode}\n                        error={error}\n                        endCounter={endCounter}\n                        setStartCounter={setStartCounter}\n                        setEditMode={setEditMode}\n                        setEndCounter={setEndCounter}\n                        setError={setError}\n                        startValue={startValue}\n                        onIncrementHandler={onIncrementHandler}\n                        onResetHandler={onResetHandler}\n                        limitReached={limitReached}\n                        startCounter={startCounter}\n                    />}/>\n\n                    <Route path={'/varianttwo'} render={() => <VariantTwo\n                        setStartValue={setStartValue}\n                        editMode={editMode}\n                        error={error}\n                        endCounter={endCounter}\n                        setStartCounter={setStartCounter}\n                        setEditMode={setEditMode}\n                        setEndCounter={setEndCounter}\n                        setError={setError}\n                        startValue={startValue}\n                        onIncrementHandler={onIncrementHandler}\n                        onResetHandler={onResetHandler}\n                        limitReached={limitReached}\n                        startCounter={startCounter}\n                    />}/>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"ValueEditor_inputContainer__JjO0q\",\"buttonContainer\":\"ValueEditor_buttonContainer__vKX2r\",\"input\":\"ValueEditor_input__20qGD\",\"errorInput\":\"ValueEditor_errorInput__Z6kq9\"};"],"sourceRoot":""}