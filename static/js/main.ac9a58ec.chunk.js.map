{"version":3,"sources":["components/Counter/Counter.module.css","components/Button/Button.module.css","redux/counter-reducer.ts","components/Button/Button.tsx","components/ValueEditor/ValueEditor.tsx","components/CounterDisplay/CounterDisplay.tsx","components/Counter/Counter.tsx","VariantOne.tsx","VariantTwo.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","utils/localstorage-utils.ts","index.tsx","components/ValueEditor/ValueEditor.module.css"],"names":["module","exports","ACTIONS_TYPES","Button","React","memo","props","disabled","onClick","children","className","styles","button","initialState","currentValue","maxValue","startValue","error","setError","type","SET_ERROR","payload","ValueEditor","editMode","setEditMode","dispatch","useDispatch","onClickHandler","useCallback","SET_CURRENT_VALUE","inputContainer","input","errorInput","value","onChange","event","currentTarget","SET_START_VALUE","setStartValue","SET_MAX_VALUE","setMaxValue","buttonContainer","CounterDisplay","limitReached","CounterStyle","color","fontWeight","fontSize","displayedContent","style","Counter","variant","onIncrementHandler","onResetHandler","displayContainer","VariantOne","VariantTwo","App","useSelector","state","counter","useState","INCREMENT_COUNTER","RESET_COUNTER","exact","to","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","persistedState","serialisedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ac9a58ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"Counter_displayContainer__24-Sf\",\"buttonContainer\":\"Counter_buttonContainer__2rz82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3-QGf\"};","export enum ACTIONS_TYPES {\r\n    SET_CURRENT_VALUE = 'Counter/Counter/SET_CURRENT_VALUE',\r\n    SET_START_VALUE = 'Counter/Counter/SET_START_VALUE',\r\n    SET_MAX_VALUE = 'Counter/Counter/SET_MAX_VALUE',\r\n    SET_ERROR = 'Counter/Counter/SET_ERROR',\r\n    INCREMENT_COUNTER = 'Counter/Counter/INCREMENT_COUNTER',\r\n    RESET_COUNTER = 'Counter/Counter/RESET_COUNTER',\r\n}\r\n\r\nexport type ActionType = ReturnType<typeof setCurrentValue>\r\n    | ReturnType<typeof incrementCounter>\r\n    | ReturnType<typeof resetCounter>\r\n    | ReturnType<typeof setStartValue>\r\n    | ReturnType<typeof setMaxValue>\r\n    | ReturnType<typeof setError>\r\n\r\nexport type CounterStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    currentValue: 0,\r\n    maxValue: 5,\r\n    startValue: 0,\r\n    error: false,\r\n}\r\n\r\nexport const counterReducer = (state: CounterStateType = initialState, action: ActionType): CounterStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPES.SET_START_VALUE:\r\n        case ACTIONS_TYPES.SET_MAX_VALUE:\r\n        case ACTIONS_TYPES.SET_ERROR:\r\n        case ACTIONS_TYPES.SET_CURRENT_VALUE: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case ACTIONS_TYPES.INCREMENT_COUNTER: {\r\n            return {\r\n                ...state,\r\n                currentValue: state.currentValue + 1,\r\n            }\r\n        }\r\n        case ACTIONS_TYPES.RESET_COUNTER: {\r\n            return {\r\n                ...state,\r\n                currentValue: state.startValue,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setCurrentValue = (currentValue: number) => ({\r\n    type: ACTIONS_TYPES.SET_CURRENT_VALUE,\r\n    payload: {\r\n        currentValue,\r\n    },\r\n});\r\nexport const setStartValue = (startValue: number) => ({\r\n    type: ACTIONS_TYPES.SET_START_VALUE,\r\n    payload: {\r\n        startValue,\r\n    },\r\n});\r\n\r\nexport const setMaxValue = (maxValue: number) => ({\r\n    type: ACTIONS_TYPES.SET_MAX_VALUE,\r\n    payload: {\r\n        maxValue,\r\n    },\r\n});\r\n\r\nexport const setError = (error: boolean) => ({\r\n    type: ACTIONS_TYPES.SET_ERROR,\r\n    payload: {\r\n        error,\r\n    },\r\n});\r\n\r\nexport const incrementCounter = () => ({\r\n    type: ACTIONS_TYPES.INCREMENT_COUNTER,\r\n    payload: {},\r\n});\r\n\r\nexport const resetCounter = () => ({\r\n    type: ACTIONS_TYPES.RESET_COUNTER,\r\n    payload: {},\r\n});","import React, {FC} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype PropsType = {\r\n    disabled?: boolean,\r\n    onClick: () => void,\r\n}\r\n\r\nexport const Button: FC<PropsType> = React.memo((props) => {\r\n    const {disabled, onClick, children} = props;\r\n\r\n    return (\r\n        <button className={styles.button} onClick={onClick} disabled={disabled}>{children}</button>\r\n    )\r\n})","import React, {ChangeEvent, FC, useCallback} from 'react';\r\nimport {Button} from '../Button/Button';\r\nimport styles from './ValueEditor.module.css'\r\nimport {useDispatch} from 'react-redux';\r\nimport {setCurrentValue, setError, setMaxValue, setStartValue} from '../../redux/counter-reducer';\r\n\r\ntype PropsType = {\r\n    startValue: number,\r\n    maxValue: number,\r\n    editMode: boolean,\r\n    error: boolean,\r\n    setEditMode: (value: boolean) => void,\r\n};\r\n\r\nexport const ValueEditor: FC<PropsType> = (props) => {\r\n    const {\r\n        error,\r\n        editMode,\r\n        startValue,\r\n        maxValue,\r\n        setEditMode,\r\n    } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeStartValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const value = +event.currentTarget.value;\r\n        if (value >= maxValue || value < 0) return dispatch(setError(true));\r\n        error && dispatch(setError(false));\r\n        setEditMode(true);\r\n        dispatch(setStartValue(value));\r\n    };\r\n    const onChangeMaxValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const value = +event.currentTarget.value;\r\n        if (value <= startValue) return dispatch(setError(true));\r\n        error && dispatch(setError(false));\r\n        setEditMode(true);\r\n        dispatch(setMaxValue(value));\r\n    };\r\n    const onClickHandler = useCallback(() => {\r\n        dispatch(setCurrentValue(startValue));\r\n        setEditMode(false);\r\n    }, [dispatch, startValue, setEditMode]);\r\n\r\n\r\n    return (<div>\r\n        <div className={styles.inputContainer}>\r\n            <div>Start value:\r\n                <input type=\"number\"\r\n                       className={`${styles.input} ${error ? styles.errorInput : ''}`}\r\n                       value={startValue}\r\n                       onChange={onChangeStartValue}/>\r\n            </div>\r\n            <div>Max value: <input type=\"number\"\r\n                                   className={`${styles.input} ${error ? styles.errorInput : ''}`}\r\n                                   value={maxValue}\r\n                                   onChange={onChangeMaxValue}/>\r\n            </div>\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n            <Button onClick={onClickHandler} disabled={!editMode || error}>set</Button>\r\n        </div>\r\n    </div>)\r\n};","import React, {FC} from 'react';\r\n\r\ntype PropsType = {\r\n    currentValue: number,\r\n    limitReached: boolean,\r\n    editMode: boolean,\r\n    error: boolean,\r\n};\r\n\r\nexport const CounterDisplay: FC<PropsType> = (props) => {\r\n    const {currentValue, limitReached, editMode, error} = props;\r\n\r\n    const CounterStyle = {\r\n        color: limitReached || error ? 'red' : '#282c34',\r\n        fontWeight: 700,\r\n        fontSize: limitReached ? '3.5rem' : '3rem',\r\n    }\r\n    const displayedContent = error ? 'Invalid value' : editMode ? 'Set value' : currentValue;\r\n\r\n    return (\r\n        <div style={CounterStyle}>{displayedContent}</div>\r\n    )\r\n};","import React, {FC} from 'react';\r\nimport {Button} from '../Button/Button';\r\nimport styles from './Counter.module.css'\r\nimport {CounterDisplay} from '../CounterDisplay/CounterDisplay';\r\nimport {CounterVariantType} from '../../App';\r\n\r\ntype PropsType = {\r\n    currentValue: number,\r\n    editMode: boolean,\r\n    error: boolean,\r\n    limitReached: boolean,\r\n    startValue: number,\r\n    variant: CounterVariantType,\r\n    onIncrementHandler: () => void,\r\n    onResetHandler: () => void,\r\n    setEditMode: (value: boolean) => void,\r\n};\r\n\r\nexport const Counter: FC<PropsType> = (props) => {\r\n    const {\r\n        variant, currentValue, error, limitReached,\r\n        editMode, startValue, onIncrementHandler, onResetHandler, setEditMode\r\n    } = props;\r\n\r\n    return (<div>\r\n        <div className={styles.displayContainer}>\r\n            <CounterDisplay currentValue={currentValue}\r\n                            editMode={editMode}\r\n                            limitReached={limitReached}\r\n                            error={error}/>\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n            <Button disabled={limitReached || editMode}\r\n                    onClick={onIncrementHandler}>inc</Button>\r\n            <Button disabled={currentValue === startValue || editMode}\r\n                    onClick={onResetHandler}>reset</Button>\r\n            {variant === 'TWO' && <Button onClick={() => setEditMode(true)}>set</Button>}\r\n        </div>\r\n    </div>)\r\n};","import React, {FC} from 'react';\r\nimport {ValueEditor} from './components/ValueEditor/ValueEditor';\r\nimport {Counter} from './components/Counter/Counter';\r\nimport './App.css';\r\n\r\ntype PropsType = {\r\n    startValue: number,\r\n    currentValue: number,\r\n    error: boolean,\r\n    editMode: boolean,\r\n    maxValue: number,\r\n    limitReached: boolean,\r\n    setEditMode: (value: boolean) => void,\r\n    onIncrementHandler: () => void,\r\n    onResetHandler: () => void,\r\n};\r\n\r\nexport const VariantOne: FC<PropsType> = (props) => {\r\n    const {\r\n        startValue,\r\n        currentValue,\r\n        editMode,\r\n        error,\r\n        limitReached,\r\n        onResetHandler,\r\n        onIncrementHandler,\r\n        setEditMode,\r\n        maxValue,\r\n    } = props;\r\n\r\n    const VARIANT = 'ONE';\r\n\r\n    return (<div className=\"wrapper-counter\">\r\n        <div className=\"wrapper-block\">\r\n            <ValueEditor startValue={startValue}\r\n                         error={error}\r\n                         editMode={editMode}\r\n                         setEditMode={setEditMode}\r\n                         maxValue={maxValue}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"wrapper-block\">\r\n            <Counter currentValue={currentValue}\r\n                     editMode={editMode}\r\n                     error={error}\r\n                     limitReached={limitReached}\r\n                     startValue={startValue}\r\n                     onIncrementHandler={onIncrementHandler}\r\n                     onResetHandler={onResetHandler}\r\n                     variant={VARIANT}\r\n                     setEditMode={setEditMode}\r\n            />\r\n        </div>\r\n    </div>)\r\n};","import React, {FC} from 'react';\r\nimport {ValueEditor} from './components/ValueEditor/ValueEditor';\r\nimport {Counter} from './components/Counter/Counter';\r\nimport './App.css';\r\n\r\ntype PropsType = {\r\n    startValue: number,\r\n    currentValue: number,\r\n    error: boolean,\r\n    editMode: boolean,\r\n    maxValue: number,\r\n    limitReached: boolean,\r\n    setEditMode: (value: boolean) => void,\r\n    onIncrementHandler: () => void,\r\n    onResetHandler: () => void,\r\n};\r\n\r\nexport const VariantTwo: FC<PropsType> = (props) => {\r\n    const {\r\n        startValue,\r\n        editMode,\r\n        error,\r\n        currentValue,\r\n        limitReached,\r\n        onResetHandler,\r\n        onIncrementHandler,\r\n        setEditMode,\r\n        maxValue,\r\n    } = props;\r\n\r\n    const VARIANT = 'TWO';\r\n\r\n    return (<div className=\"wrapper-counter\">\r\n        <div className=\"wrapper-block\">\r\n            {editMode ? <ValueEditor startValue={startValue}\r\n                                     error={error}\r\n                                     editMode={editMode}\r\n                                     maxValue={maxValue}\r\n                                     setEditMode={setEditMode}\r\n            /> : <Counter currentValue={currentValue}\r\n                          editMode={editMode}\r\n                          error={error}\r\n                          limitReached={limitReached}\r\n                          startValue={startValue}\r\n                          onIncrementHandler={onIncrementHandler}\r\n                          onResetHandler={onResetHandler}\r\n                          variant={VARIANT}\r\n                          setEditMode={setEditMode}\r\n            />}\r\n        </div>\r\n    </div>)\r\n};","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport {HashRouter, NavLink, Route} from 'react-router-dom';\nimport {VariantOne} from './VariantOne';\nimport {VariantTwo} from './VariantTwo';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppStateType} from './redux/store';\nimport {incrementCounter, resetCounter,} from './redux/counter-reducer';\n\nexport type CounterVariantType = 'ONE' | 'TWO';\n\nfunction App() {\n    const currentValue = useSelector<AppStateType, number>(state => state.counter.currentValue);\n    const maxValue = useSelector<AppStateType, number>(state => state.counter.maxValue);\n    const startValue = useSelector<AppStateType, number>(state => state.counter.startValue);\n    const error = useSelector<AppStateType, boolean>(state => state.counter.error);\n\n    const limitReached = currentValue === maxValue;\n\n    const [editMode, setEditMode] = useState<boolean>(false);\n\n    const dispatch = useDispatch();\n    \n\n    const onIncrementHandler = useCallback(() => {\n        dispatch(incrementCounter());\n    }, [dispatch]);\n    const onResetHandler = useCallback(() => {\n        dispatch(resetCounter());\n    }, [dispatch]);\n\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <div className={'menuNav'}>\n                    <NavLink exact to={'/'} className={`menuNav__link`}>Variant One</NavLink>\n                    <NavLink to={'/varianttwo'} className={`menuNav__link`}>Variant Two</NavLink>\n                </div>\n                <div className=\"App-header\">\n                    <Route exact path={'/'} render={() => <VariantOne\n                        editMode={editMode}\n                        error={error}\n                        maxValue={maxValue}\n                        setEditMode={setEditMode}\n                        startValue={startValue}\n                        onIncrementHandler={onIncrementHandler}\n                        onResetHandler={onResetHandler}\n                        limitReached={limitReached}\n                        currentValue={currentValue}\n                    />}/>\n\n                    <Route path={'/varianttwo'} render={() => <VariantTwo\n                        editMode={editMode}\n                        error={error}\n                        setEditMode={setEditMode}\n                        startValue={startValue}\n                        onIncrementHandler={onIncrementHandler}\n                        onResetHandler={onResetHandler}\n                        limitReached={limitReached}\n                        currentValue={currentValue}\n                        maxValue={maxValue}\n                    />}/>\n                </div>\n            </div>\n        </HashRouter>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport {counterReducer} from './counter-reducer';\r\nimport {loadState, saveState} from '../utils/localstorage-utils';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    counter: counterReducer\r\n});\r\n\r\n\r\nconst persistedState = loadState();\r\n\r\n\r\nexport const store = createStore(rootReducer, persistedState);\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nstore.subscribe(() => {\r\n    saveState({counter: store.getState().counter})\r\n})","import {AppStateType} from '../redux/store';\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serialisedState = localStorage.getItem('state');\r\n        if (serialisedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serialisedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state: AppStateType) => {\r\n    try {\r\n        const serialisedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serialisedState);\r\n    } catch (err) {\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"ValueEditor_inputContainer__JjO0q\",\"buttonContainer\":\"ValueEditor_buttonContainer__vKX2r\",\"input\":\"ValueEditor_input__20qGD\",\"errorInput\":\"ValueEditor_errorInput__Z6kq9\"};"],"sourceRoot":""}